/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portlets.communication.message.renderer.html;import java.io.IOException;import java.util.ResourceBundle;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter;import org.apache.commons.lang.StringUtils ;import org.exoplatform.faces.core.renderer.html.*;import org.exoplatform.portlets.communication.message.component.UIViewMessage;import org.exoplatform.services.communication.message.Message;/** * @author Tuan Nguyen (tuan08@users.sourceforge.net) * @since Aug 27, 2004 * @version $Id: ViewMessageRenderer.java,v 1.7 2004/11/01 15:06:42 tuan08 Exp $  */public class ViewMessageRenderer extends HtmlBasicRenderer {  public ViewMessageRenderer()  {    buttonRenderer_ = new ThreeImagePatternButton("ic3-button", "ic3-select-button") ;   }  public void encodeChildren(FacesContext context, UIComponent component)  throws IOException {    UIViewMessage uiView = (UIViewMessage) component;    ResponseWriter w = context.getResponseWriter();    ResourceBundle res = getApplicationResourceBundle(context.getExternalContext());    Message message = uiView.getMessage();    w.write("<table class='UIViewMessage'>");    w.  write("<tr>");    w.    write("<th>");      w.      write("<label>"); w.write(res.getString("UIViewMessage.label.subject")); w.write("</label>");    w.      write(ft_.format(message.getSubject()));    w.    write("</th>");    w.  write("</tr>");    w.  write("<tr>");    w.    write("<th>");    w.      write("<label>");w.write(res.getString("UIViewMessage.label.from")); w.write("</label>");    w.      write(ft_.format(message.getFrom()));    w.    write("</th>");    w.  write("</tr>");    w.  write("<tr>");    w.    write("<th>");    w.      write("<label>"); w.write(res.getString("UIViewMessage.label.date")); w.write("</label>");    w.      write(ft_.format(message.getReceivedDate()));    w.    write("</th>");    w.  write("</tr>");    w.  write("<tr>");    w.  write("<tr>");    w.    write("<td  class='actions'>");     buttonRenderer_.render(w, uiView, res.getString("UIViewMessage.button.view-as-html"),                             UIViewMessage.htmlFormatParams_);    buttonRenderer_.render(w, uiView, res.getString("UIViewMessage.button.view-as-text"),                             UIViewMessage.textFormatParams_);    w.    write("</td>");    w.  write("</tr>");    w.    write("<td style='text-align: justify;'>");    String body = ft_.format(message.getBody()) ;    if(UIViewMessage.TEXT_FORMAT.equals(uiView.getFormat())) {      w.    write("<pre>");      w.      write(body);      w.    write("</pre>");    } else {      body = StringUtils.replace(body, "\n","<br/>") ;      w.        write(body);    }    w.    write("</td>");    w.  write("</tr>");    w.  write("<tr>");    w.    write("<td  class='actions'>");     buttonRenderer_.render(w, uiView, res.getString("UIViewMessage.button.reply"),                           UIViewMessage.replyMessageParams_);    buttonRenderer_.render(w, uiView, res.getString("UIViewMessage.button.delete"),                             UIViewMessage.deleteMessageParams_);    buttonRenderer_.render(w, uiView, res.getString("UIViewMessage.button.archived"),                           UIViewMessage.archivedMessageParams_);    buttonRenderer_.render(w, uiView, res.getString("UIViewMessage.button.back"),                            UIViewMessage.cancelParams_);    w.    write("</td>");    w.  write("</tr>");    w.write("</table>");  }}