/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portlets.backup.renderer.html;import java.io.IOException;import java.util.List;import java.util.ResourceBundle;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter;import org.exoplatform.faces.FacesConstants;import org.exoplatform.faces.core.component.model.Parameter;import org.exoplatform.faces.core.renderer.html.HtmlBasicRenderer;import org.exoplatform.portlets.backup.component.UIImportData;import org.exoplatform.portlets.backup.component.model.ImportData;/** * May 31, 2004  * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $ID$ **/public class ImportDataRenderer extends HtmlBasicRenderer {  final public static String IMPORT_ICON = "<img class='import-icon' src='/skin/blank.gif'/>";  final public static String REFRESH_ICON = "<img class='refresh-icon' src='/skin/blank.gif'/>";  final public static String VIEW_ICON = "<img class='view-icon' src='/skin/blank.gif'/>";  private static Parameter IMPORT_DATA =  new Parameter(FacesConstants.ACTION , "importData") ;  private static Parameter VIEW_DATA =  new Parameter(FacesConstants.ACTION , "viewData") ;  private static Parameter[] refreshParams = {new Parameter(FacesConstants.ACTION , "refresh") };  private static Parameter[] importAllParams = {new Parameter(FacesConstants.ACTION , "importAll") };	 public void encodeChildren( FacesContext context, UIComponent component ) throws IOException {    UIImportData uiImportData = (UIImportData) component;    ResourceBundle res = getApplicationResourceBundle(context.getExternalContext()) ;    String importDataButton = res.getString("UIImportData.button.import-data") ;    String importAllButton = res.getString("UIImportData.button.import-all") ;    String viewDataButton = res.getString("UIImportData.button.view-data") ;    String refreshButton = res.getString("UIImportData.button.refresh") ;    ResponseWriter w = context.getResponseWriter() ;    List list = uiImportData.getImportDatas() ;    Parameter nameParam = new Parameter("dataName" , "");    Parameter[] importDataParams = { IMPORT_DATA , nameParam} ;    Parameter[] viewDataParams = { VIEW_DATA , nameParam} ;    w.write("<table class='UIImportData'>") ;    w.	write("<tr>") ;    w.		write("<th>"); w.write(res.getString("UIImportData.header.data-name")) ;w.write("</th>") ;  	w.		write("<th>"); w.write(res.getString("UIImportData.header.created-date")); w.write("</th>") ;  	w.		write("<th>"); w.write(res.getString("UIImportData.header.modified-date")); w.write("</th>") ;  	w.		write("<th>"); w.write(res.getString("UIImportData.header.action")); w.write("</th>") ;  	w.	write("</tr>") ;  	for(int i = 0; i < list.size(); i++) {  		ImportData data = (ImportData) list.get(i) ;  		nameParam.setValue(data.getName()) ;      String clazz = "odd";      if (i % 2 == 0)  clazz = "even";      w.write("<tr  class='" + clazz + "'>") ;  	  w.	write("<td>"); w.write(data.getName()) ;w.write("</td>") ;  	  w.	write("<td>"); w.write(data.getCreatedDate().toString()); w.write("</td>") ;  	  w.	write("<td>"); w.write(data.getModifiedDate().toString()); w.write("</td>") ;  	  w.	write("<td class='action'>");   	  if(uiImportData.hasAdminRole()) {        linkRenderer_.render(w, uiImportData,IMPORT_ICON + importDataButton, importDataParams) ;  	    linkRenderer_.render(w, uiImportData,VIEW_ICON + viewDataButton, viewDataParams) ;  	  } else {  	  	w.write('-');  	  }  	  w.	write("</td>") ;  	  w.write("</tr>") ;  	}  	w.	write("<tr class='footer'>") ;    w.		write("<td colspan='4' style='text-align: center'>");    linkRenderer_.render(w,uiImportData, refreshButton, refreshParams) ;    linkRenderer_.render(w,uiImportData, importAllButton, importAllParams) ;    w.		write("</td>");   	w.	write("</tr>") ;	    w.write("</table>") ;	 }}	