/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portlets.monitor.session.component;import java.util.Date;import java.util.GregorianCalendar;import org.exoplatform.faces.core.component.UICheckBox;import org.exoplatform.faces.core.component.UIDateInput;import org.exoplatform.faces.core.component.UISimpleForm;import org.exoplatform.faces.core.component.UIStringInput;import org.exoplatform.faces.core.component.model.*;import org.exoplatform.faces.core.event.ExoActionEvent;import org.exoplatform.faces.core.event.ExoActionListener;import org.exoplatform.services.portal.log.Query;/** * Sat, Jan 03, 2004 @ 11:16  * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $Id: UISearchUserForm.java,v 1.6 2004/10/22 14:23:30 tuan08 Exp $ */public class UISearchLogForm extends UISimpleForm {  public static final String SEARCH_LOG = "search";  private UIStringInput sessionOwner_ ;  private UIStringInput remoteUser_ ;  private UIStringInput ipAddress_ ;  private UIStringInput clientType_ ;  private UICheckBox error_ ;  private UIDateInput fromDate_ ;  private UIDateInput toDate_ ;  public UISearchLogForm() {    super("searchForm", "post", null) ;    setId("UISearchLogForm");    setClazz("UIAdvancedSearch");    sessionOwner_ = new UIStringInput("sessionOwner", "")  ;    remoteUser_ = new UIStringInput("remoteUser", "") ;    ipAddress_ = new UIStringInput("ipAddress", "") ;    clientType_ = new UIStringInput("clientType", "") ;    error_ = new UICheckBox("error", "true");    fromDate_ = new UIDateInput("fromDate", new GregorianCalendar(2004, 0, 1).getTime()) ;    toDate_ = new UIDateInput("toDate", new Date()) ;    add(new Row().        add(new LabelCell("#{UISearchLogForm.label.session-owner}")).        add(new ComponentCell(this, sessionOwner_))) ;    add(new Row().        add(new LabelCell("#{UISearchLogForm.label.remote-user}")).        add(new ComponentCell(this, remoteUser_))) ;    add(new Row().        add(new LabelCell("#{UISearchLogForm.label.ip-address}")).        add(new ComponentCell(this, ipAddress_))) ;    add(new Row().        add(new LabelCell("#{UISearchLogForm.label.client-type}")).        add(new ComponentCell(this, clientType_))) ;    add(new Row().        add(new LabelCell("#{UISearchLogForm.label.access-time}")).        add(new ListComponentCell().            add(this, fromDate_).            add("#{UISearchLogForm.label.to}").            add(this, toDate_))) ;    add(new Row().        add(new LabelCell("#{UISearchLogForm.label.error}")).        add(new ComponentCell(this, error_))) ;    add(new Row().        add(new ListComponentCell().            add(new FormButton("#{UISearchLogForm.button.search}", SEARCH_LOG)).                add(new FormButton("#{UISearchLogForm.button.cancel}", CANCEL_ACTION)).                addColspan("2").addAlign("center"))) ;       addActionListener(SearchUserActionListener.class, SEARCH_LOG) ;      addActionListener(CancelActionListener.class, CANCEL_ACTION) ;    }    static public class SearchUserActionListener extends ExoActionListener  {    public void execute(ExoActionEvent event) throws Exception {      UISearchLogForm uiForm = (UISearchLogForm) event.getComponent() ;      UIListSessionLog uiList =         (UIListSessionLog) uiForm.getSibling(UIListSessionLog.class);      Query q = new Query() ;      q.setSessionOwner(uiForm.sessionOwner_.getValue()) ;      q.setRemoteUser(uiForm.remoteUser_.getValue()) ;      q.setIPAddress(uiForm.ipAddress_.getValue()) ;      q.setClientType(uiForm.clientType_.getValue()) ;      q.setFromDate(uiForm.fromDate_.getValue()) ;      q.setToDate(uiForm.toDate_.getValue()) ;      if(uiForm.error_.getSelect())  q.setError(1) ;      uiList.update(q) ;      uiForm.setRenderedSibling(UIListSessionLog.class) ;    }  }    static public class CancelActionListener extends ExoActionListener  {    public void execute(ExoActionEvent event) throws Exception {      UISearchLogForm uiForm = (UISearchLogForm) event.getComponent() ;      uiForm.setRenderedSibling(UIListSessionLog.class) ;    }  }}