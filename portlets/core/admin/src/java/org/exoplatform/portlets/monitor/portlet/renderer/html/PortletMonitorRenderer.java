/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portlets.monitor.portlet.renderer.html;import java.util.* ;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter ;import org.exoplatform.faces.core.renderer.html.HtmlBasicRenderer;import org.exoplatform.portlets.monitor.portlet.component.UIPortletMonitor;import org.exoplatform.services.portletcontainer.monitor.PortletRequestMonitorData;import org.exoplatform.services.portletcontainer.monitor.PortletRuntimeData;import java.io.IOException;/** * Apr 28, 2004 * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $Id: PortletMonitorRenderer.java,v 1.4 2004/08/02 12:04:26 tuan08 Exp $ **/public class PortletMonitorRenderer extends HtmlBasicRenderer {  public void encodeChildren( FacesContext context, UIComponent component ) throws IOException {    UIPortletMonitor uiMonitor = (UIPortletMonitor) component ;    ResourceBundle res = getApplicationResourceBundle(context.getExternalContext()) ;    ResponseWriter w = context.getResponseWriter() ;    w.write("<table class='UIPortletMonitor'>") ;    w.  write("<tr>") ;    w.    write("<th rowspan='2'>") ; w.write(res.getString("UIPortletMonitor.header.time-range")) ; w.write("</th>") ;    w.    write("<th colspan='4'>") ; w.write(res.getString("UIPortletMonitor.header.process-action-method")) ; w.write("</th>") ;    w.    write("<th colspan='5'>") ; w.write(res.getString("UIPortletMonitor.header.render-method")) ; w.write("</th>") ;    w.  write("</tr>") ;    w.  write("<tr>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.counter")) ; w.write("</th>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.min")) ; w.write("</th>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.max")) ; w.write("</th>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.avg")) ; w.write("</th>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.counter")) ; w.write("</th>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.cache-hit")) ; w.write("</th>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.min")) ; w.write("</th>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.max")) ; w.write("</th>") ;    w.    write("<th>") ; w.write(res.getString("UIPortletMonitor.header.avg")) ; w.write("</th>") ;    w.  write("</tr>") ;    PortletRuntimeData rtdata = uiMonitor.getPortletRuntimeData() ;    PortletRequestMonitorData[] datas = rtdata.getPortletRequestMonitorData();    for(int i = 0 ; i < datas.length; i++) {      String clazz = "odd";      if (i % 2 == 0)        clazz = "even";      w.write("<tr  class='" + clazz + "'>") ;      w.  write("<td>") ;      w.    write(Long.toString(datas[i].minRange())) ;      w.    write(" - ") ;      w.    write(Long.toString(datas[i].maxRange())) ;      w.  write("</td>") ;      w.  write("<td>") ; w.write(Integer.toString(datas[i].getActionRequestCounter())) ; w.write("</td>") ;      w.  write("<td>") ; w.write(Long.toString(datas[i].getMinActionExecutionTime())) ; w.write("</td>") ;      w.  write("<td>") ; w.write(Long.toString(datas[i].getMaxActionExecutionTime())) ; w.write("</td>") ;      w.  write("<td>") ; w.write(Long.toString(datas[i].getAvgActionExecutionTime())) ; w.write("</td>") ;      w.  write("<td>") ; w.write(Integer.toString(datas[i].getRenderRequestCounter())) ; w.write("</td>") ;      w.  write("<td>") ; w.write(Integer.toString(datas[i].getCacheHitCounter())) ; w.write("</td>") ;      w.  write("<td>") ; w.write(Long.toString(datas[i].getMinRenderExecutionTime())) ; w.write("</td>") ;      w.  write("<td>") ; w.write(Long.toString(datas[i].getMaxRenderExecutionTime())) ; w.write("</td>") ;      w.  write("<td>") ; w.write(Long.toString(datas[i].getAvgRenderExecutionTime())) ; w.write("</td>") ;      w.write("</tr>") ;    }    w.write("</table>") ;  }}