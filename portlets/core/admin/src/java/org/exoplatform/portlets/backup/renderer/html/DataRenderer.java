/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portlets.backup.renderer.html;import java.io.IOException;import java.util.Enumeration;import java.util.ResourceBundle;import java.util.jar.JarEntry;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter;import org.exoplatform.faces.core.component.model.Parameter;import org.exoplatform.faces.core.renderer.html.HtmlBasicRenderer;import org.exoplatform.portlets.backup.component.UIData;import org.exoplatform.portlets.backup.component.model.ImportData;/** * May 31, 2004 * * @author: Tuan Nguyen * @email: tuan08@users.sourceforge.net * @version: $ID$ */public class DataRenderer extends HtmlBasicRenderer {  private static Parameter IMPORT_DATA =    new Parameter(ACTION, "importData");  private static Parameter[] cancelParams =  {new Parameter(ACTION, "cancel")};  public void encodeChildren(FacesContext context, UIComponent component) throws IOException {    UIData uiData = (UIData) component;    ResourceBundle res = getApplicationResourceBundle(context.getExternalContext());    String cancelButton = res.getString("UIData.button.cancel");    ResponseWriter w = context.getResponseWriter();    ImportData data = uiData.getImportDataModel();    //Parameter nameParam = new Parameter("name", "");    //Parameter[] importDataParams = {IMPORT_DATA, nameParam};    w.write("<div class='UIData'>");    w.  write("<table class='meta-data'>");    w.    write("<tr>");    w.      write("<th>");    w.        write(res.getString("UIData.header.name"));    w.      write("</th>");    w.      write("<td>");    w.        write(data.getName());    w.      write("</td>");    w.    write("</tr>");    w.    write("<tr>");    w.      write("<th>");    w.        write(res.getString("UIData.header.created-date"));    w.      write("</th>");    w.      write("<td>");    w.        write(ft_.format(data.getCreatedDate()));    w.      write("</td>");    w.    write("</tr>");    w.    write("<tr>");    w.      write("<th>");    w.        write(res.getString("UIData.header.modified-date"));    w.      write("</th>");    w.      write("<td>");    w.        write(ft_.format(data.getModifiedDate()));    w.      write("</td>");    w.    write("</tr>");    w.  write("</table>");    w.  write("<table class='data'>");    w.    write("<tr>");    w.      write("<th colspan='2'>");    w.        write(res.getString("UIData.header.entries"));    w.      write("</th>");    w.    write("</tr>");    Enumeration e = data.getEntries();    int i = 0;    while (e.hasMoreElements()) {      JarEntry entry = (JarEntry) e.nextElement();      String clazz = "odd";      if (i % 2 == 0)        clazz = "even";      w.  write("<tr  class='" + clazz + "'>");      w.    write("<td colspan='2'>");      w.      write(entry.getName());      w.    write("</td>");      w.  write("</tr>");      i++;    }    w.  write("</tr>");    w.write("</table>");    w.write("<table class='footer'>");    w.  write("<tr>");    w.    write("<td colspan='2' style='text-align: center'>");    linkRenderer_.render(w, uiData, cancelButton, cancelParams);    w.    write("</td>");    w.  write("</tr>");    w.write("</table>");    w.write("</div>");  }}	