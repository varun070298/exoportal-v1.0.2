/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portlets.monitor.session.renderer.html;import java.util.*; import java.io.IOException;import java.util.ResourceBundle;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter;import org.exoplatform.container.monitor.SessionMonitor;import org.exoplatform.container.monitor.ActionData;import org.exoplatform.faces.core.renderer.html.HtmlBasicRenderer;import org.exoplatform.portlets.monitor.session.component.UIActionHistory;/** * Apr 28, 2004 * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $Id: PortalMonitorRenderer.java,v 1.4 2004/08/02 12:04:26 tuan08 Exp $ **/public class ActionHistoryRenderer extends HtmlBasicRenderer {  static private String[] HEADER = {      "UISessionMontitor.header.portal",  "UISessionMontitor.header.page",      "UISessionMontitor.header.request-type", "UISessionMontitor.header.handle-time",      "UISessionMontitor.header.parameters", "UISessionMontitor.header.error"  } ;      public void encodeChildren( FacesContext context, UIComponent component ) throws IOException {  	UIActionHistory uiMonitor = (UIActionHistory) component ;    ResponseWriter w = context.getResponseWriter() ;    ResourceBundle res = getApplicationResourceBundle(context.getExternalContext()) ;    w.write("<table class='UISessionMonitor'>") ;    w.  write("<tr>") ;    for(int i =0 ; i < HEADER.length; i++ ) {      w.  write("<th>") ; w.write(res.getString(HEADER[i])); w.write("</th>") ;    }    w.  write("</tr>") ;    Iterator itr = uiMonitor.getActionHistory().iterator() ;    while(itr.hasNext()) {      ActionData data = (ActionData) itr.next() ;      String page = data.getPage() ;      if(page == null || page.length() == 0) page = "N/A" ;      w.write("<tr>") ;      w.  write("<td>") ; w.write(data.getPortal()); w.write("</td>") ;      w.  write("<td>") ; w.write(page); w.write("</td>") ;      w.  write("<td>") ; w.write(data.getRequestType()); w.write("</td>") ;      w.  write("<td>") ; w.write(Long.toString(data.getHandleTime())); w.write("</td>") ;      w.  write("<td width='400'>") ; w.write(data.getParameters()); w.write("</td>") ;      if(data.getError() == null) {        w.  write("<td>") ; w.write("-"); w.write("</td>") ;      } else {        w.  write("<td align='center'>") ; w.write("view"); w.write("</td>") ;      }      w.write("</tr>") ;      if(data.getError() != null) {        w.write("<tr>") ;        w.  write("<td colspan='5'>") ; w.write(data.getError()); w.write("</td>") ;        w.write("</tr>") ;      }    }    w.  write("<tr>") ;    w.    write("<td colspan='5'>") ;     linkRenderer_.render(w, uiMonitor , res.getString("UISessionMontitor.button.back"),                          UIActionHistory.BACK_PARAMS) ;    w.    write("</td>") ;    w.  write("</tr>") ;    w.write("</table>") ;  }}