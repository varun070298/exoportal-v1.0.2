/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portlets.backup.renderer.html;import java.io.IOException;import java.util.Collection;import java.util.Iterator;import java.util.ResourceBundle;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter;import org.exoplatform.faces.core.component.model.Parameter;import org.exoplatform.faces.core.renderer.html.HtmlBasicRenderer;import org.exoplatform.portlets.backup.component.UIExportData;import org.exoplatform.services.backup.ImportExportPlugin;/** * May 31, 2004  * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $ID$ **/public class ExportDataRenderer extends HtmlBasicRenderer {  private static Parameter EXPORT_DATA =  new Parameter(ACTION , "exportData") ;  private static Parameter[] exportAllParams =	 { new Parameter(ACTION , "exportAll") } ;	public void encodeChildren( FacesContext context, UIComponent component ) throws IOException {    UIExportData uiExportData = (UIExportData) component;    ResourceBundle res = getApplicationResourceBundle(context.getExternalContext()) ;    ResponseWriter w = context.getResponseWriter() ;    String exportDataButton = res.getString("UIExportData.button.export-data") ;    String exportAllButton = res.getString("UIExportData.button.export-all") ;    Parameter nameParam = new Parameter("name" , "");    Parameter[] exportDataParams = {  EXPORT_DATA , nameParam} ;    Collection importersExporters = uiExportData.getImportersExporters() ;    w.write("<table class='UIExportData'>") ;    w.	write("<tr>") ;    w.		write("<th>"); w.write(res.getString("UIExportData.header.importer-exporter-name")) ;w.write("</th>") ;  	w.		write("<th>"); w.write(res.getString("UIExportData.header.description")); w.write("</th>") ;  	w.		write("<th>"); w.write(res.getString("UIExportData.header.action")); w.write("</th>") ;  	w.	write("</tr>") ;    Iterator i = importersExporters.iterator() ;    boolean even = true ;    while (i.hasNext()) {      ImportExportPlugin ie = (ImportExportPlugin) i.next();    	nameParam.setValue(ie.getName()) ;      String clazz = "odd";      if (even) clazz = "even";      w.write("<tr  class='" + clazz + "'>") ;    	w. write("<td>") ; w.write(ie.getName()); w.write("</td>") ;    	w. write("<td>") ; w.write(ie.getDescription()); w.write("</td>") ;    	w. write("<td>") ;     	linkRenderer_.render(w,uiExportData, exportDataButton, exportDataParams) ;    	w. write("</td>") ;    	w.write("</tr>") ;      even = !even ;    }        if(uiExportData.hasAdminRole()) {    	w.write("<tr class='footer'>") ;    	w.	write("<td colspan='3' style='text-align: center;'>") ;    	linkRenderer_.render(w,uiExportData, exportAllButton, exportAllParams) ;    	w.	write("</td>") ;    	w.write("</tr>") ;    }    w.write("</table>") ;  }}