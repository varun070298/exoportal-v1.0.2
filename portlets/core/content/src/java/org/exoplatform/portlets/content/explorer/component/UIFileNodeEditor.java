/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portlets.content.explorer.component;import java.io.File;import org.exoplatform.faces.application.ExoFacesMessage;import org.exoplatform.faces.core.component.InformationProvider;import org.exoplatform.faces.core.component.UISimpleForm;import org.exoplatform.faces.core.component.UIStringInput;import org.exoplatform.faces.core.component.model.*;import org.exoplatform.faces.core.event.ExoActionEvent;import org.exoplatform.faces.core.event.ExoActionListener;import org.exoplatform.portlets.content.explorer.component.model.NodeDescriptor;/** * @email:   tuan08@users.sourceforge.net * @version: $Id: UIContentEditor.java,v 1.1 2004/07/16 09:51:34 oranheim Exp $ */public class UIFileNodeEditor extends UISimpleForm implements ExplorerListener {	final static public String CREATE_DIR_ACTION = "createDir" ;	final static public String CREATE_FILE_ACTION = "createFile" ;  protected UIStringInput dirInput ;  protected UIStringInput fileInput ;  public UIFileNodeEditor() {    super("contentForm", "post", null) ;    setId("UIContentEditor") ;    setClazz("UIContentEditor") ;    dirInput = new UIStringInput("dir", "") ;    fileInput = new UIStringInput("file", "") ;    add(new Row().        add(new LabelCell("#{UIFileNodeEditor.label.create-dir}")).        add(new ComponentCell(this, dirInput)).        add(new ListComponentCell().            add(new FormButton("#{UIFileNodeEditor.button.create-dir}", CREATE_DIR_ACTION))));    add(new Row().        add(new LabelCell("#{UIFileNodeEditor.label.create-file}")).        add(new ComponentCell(this, fileInput)).        add(new ListComponentCell().            add(new FormButton("#{UIFileNodeEditor.button.create-file}", CREATE_FILE_ACTION))));    addActionListener(CreateDirectoryActionListener.class, CREATE_DIR_ACTION) ;    addActionListener(CreateFileActionListener.class, CREATE_FILE_ACTION) ;  }  public void  onChange(UIExplorer uiExplorer, NodeDescriptor node)  {    if(node.isLeafNode()) setRendered(false) ;    else setRendered(true) ;  }    public void  onModify(UIExplorer uiExplorer, NodeDescriptor node)  {}    public void  onAddChild(UIExplorer uiExplorer, NodeDescriptor node)  { }    public void  onRemove(UIExplorer uiExplorer, NodeDescriptor node)  {  }    static public class CreateDirectoryActionListener extends ExoActionListener {    public void execute(ExoActionEvent event) throws Exception {      UIFileNodeEditor uicomp = (UIFileNodeEditor) event.getComponent() ;      UIFileExplorer uiExplorer =         (UIFileExplorer) uicomp.getAncestorOfType(UIFileExplorer.class) ;      NodeDescriptor node = uiExplorer.getSelectNode() ;      String realPath = uiExplorer.getRealPathBaseDir() + node.getUri() + "/" + uicomp.dirInput.getValue() ;      File file = new File(realPath) ;      InformationProvider iprovider = findInformationProvider(uiExplorer)  ;      if(file.exists()) {        iprovider.addMessage(new ExoFacesMessage("#{UIFileNodeEditor.msg.name-exist}")) ;      } else {        file.mkdir() ;        uiExplorer.broadcastOnAddChild(node) ;        iprovider.addMessage(new ExoFacesMessage("#{UIFileNodeEditor.msg.create-dir-ok}")) ;      }    }  }    static public class CreateFileActionListener extends ExoActionListener {    public void execute(ExoActionEvent event) throws Exception {      UIFileNodeEditor uicomp = (UIFileNodeEditor) event.getComponent() ;      UIFileExplorer uiExplorer =         (UIFileExplorer) uicomp.getAncestorOfType(UIFileExplorer.class) ;      NodeDescriptor node = uiExplorer.getSelectNode() ;      String realPath = uiExplorer.getRealPathBaseDir() + node.getUri() + "/" + uicomp.fileInput.getValue() ;      File file = new File(realPath) ;      InformationProvider iprovider = findInformationProvider(uiExplorer)  ;      if(file.exists()) {        iprovider.addMessage(new ExoFacesMessage("#{UIFileNodeEditor.msg.name-exist}")) ;      } else {        file.createNewFile() ;        uiExplorer.broadcastOnAddChild(node) ;        iprovider.addMessage(new ExoFacesMessage("#{UIFileNodeEditor.msg.create-file-ok}")) ;      }    }  }}