/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.  * **************************************************************************/package org.exoplatform.faces.core.renderer.html;import java.io.IOException;import java.util.ResourceBundle;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter;import org.exoplatform.Constants;import org.exoplatform.faces.core.component.UIPageListIterator;public class PageListIteratorRenderer extends HtmlBasicRenderer {  public void encodeBegin(FacesContext context, UIComponent component) throws IOException {    UIPageListIterator uiIterator = (UIPageListIterator) component  ;    ResponseWriter w = context.getResponseWriter();    ResourceBundle res = getApplicationResourceBundle(context.getExternalContext()) ;    String baseURL = uiIterator.getBaseURL() ;    String separator = res.getString("UIPageIterator.img.separator") ;    w.write("<div class='UIPageIterator'>") ;    int availablePage = uiIterator.getAvailablePage() ;    int currentPage = uiIterator.getCurrentPage() ;    if(currentPage - 1 > 0) {      w.write("<a href='"); w.write(baseURL);      w.write(Constants.AMPERSAND); w.write(UIPageListIterator.PAGE_PARAM); w.write('=');w.write(Integer.toString(currentPage - 1));      w.write("'>");      w.write(res.getString("UIPageIterator.button.prev"));        w.write("</a>");    } else {      w.write("<span>"); w.write(res.getString("UIPageIterator.button.prev")); w.write("</span>");    }    int start = currentPage - 10 ;    if(start < 1) start = 1 ;    int stop = start + 19 ;    if(stop > availablePage) stop = availablePage ;    for(int i= start ; i <= stop; i++) {      w.write(separator) ;      String num = Integer.toString(i) ;      if(i == currentPage) {        w.write("<span class='selected-page'>"); w.write(Integer.toString(i)); w.write("</span>");      } else {        w.write("<a class='page' href='"); w.write(baseURL) ;        w.write(Constants.AMPERSAND); w.write(UIPageListIterator.PAGE_PARAM); w.write('='); w.write(num);        w.write("'>") ;        w.write(num) ;        w.write("</a>");      }    }    w.write(separator) ;    if(currentPage + 1 <= availablePage) {      w.write("<a href='"); w.write(baseURL) ;      w.write(Constants.AMPERSAND); w.write(UIPageListIterator.PAGE_PARAM); w.write('=');w.write(Integer.toString(currentPage + 1));      w.write("'>") ;      w.write(res.getString("UIPageIterator.button.next")) ;      w.write("</a>");    } else {      w.write("<span>"); w.write(res.getString("UIPageIterator.button.next")); w.write("</span>");    }    int available  = uiIterator.getAvailable() ;    int from = uiIterator.getFrom() + 1 ;    if(available == 0) from  = 0 ;    Object[] args = {new Integer(from), new Integer(uiIterator.getTo()),  new Integer(available)} ;    String status = ft_.format(res.getString("UIPageIterator.label.status"), args) ;    w.write("<div class='status'>"); w.write(status); w.write("</div>") ;    w.write("</div>") ;  }}