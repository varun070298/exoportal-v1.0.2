/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.  * **************************************************************************/package org.exoplatform.faces.core.renderer.html;import java.io.IOException;import java.util.List;import java.util.ResourceBundle;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter;import org.exoplatform.commons.utils.ExpressionUtil;import org.exoplatform.faces.FacesConstants;import org.exoplatform.faces.core.component.UIForm;import org.exoplatform.faces.core.component.model.SelectItem;public  class FormRenderer extends HtmlBasicRenderer {    public void encodeChildren( FacesContext context, UIComponent component ) throws IOException {    ResponseWriter w = context.getResponseWriter() ;    ResourceBundle res = getApplicationResourceBundle(context.getExternalContext()) ;    UIForm uiForm = (UIForm) component ;     String clazz = uiForm.getClazz() ;    if(clazz == null) clazz = "UIForm" ;    //w.write("\n<!-- ================================================================= -->\n") ;    w.write("<form name='"); w.write(uiForm.getFormName()); w.write("'") ;    w.write(" action='"); w.write(uiForm.getBaseURL(context)); w.write("' method='post'") ;    w.write(" class='"); w.write(clazz) ; w.write("'>\n");    w.write("<input type='hidden' name='"); w.write(ACTION); w.write("' value=''/>") ;    List list = uiForm.getContainers() ;    for(int i = 0; i < list.size(); i++) {       UIForm.Container container = (UIForm.Container) list.get(i) ;      renderContainer(w ,container,  res) ;     }    List actions = uiForm.getActions() ;    w.write("<div class='buttons'>") ;    for(int i = 0; i < actions.size(); i++) {       UIForm.Button button = (UIForm.Button) actions.get(i) ;      String label = ExpressionUtil.getExpressionValue(res, button.getLabel()) ;      renderFormButton(w,uiForm, label, button.getAction()) ;     }    w.write("</div>") ;    w.write(getNormalScript(uiForm.getFormName()));    w.write("</form>") ;    //w.write("\n<!-- ================================================================= -->\n") ;  }    private void renderContainer(ResponseWriter w , UIForm.Container container,                                ResourceBundle res) throws IOException {    List fields = container.getFields();    String legend = ExpressionUtil.getExpressionValue(res, container.getLegend()) ;    w.write("<fieldset>") ;    w.  write("<legend>");  w.write(legend); w.write("</legend>") ;    w.  write("<table>") ;    for(int i =0 ; i < fields.size(); i++) {      Object obj = fields.get(i) ;      w.write("\n<tr>\n") ;      if(obj instanceof UIForm.Field) {        UIForm.Field field = (UIForm.Field) obj ;        String label = ExpressionUtil.getExpressionValue(res, field.getLabel()) ;        w.write("<td class='label'>") ;w.write(label) ; w.write("</td>") ;        w.write("<td>") ;        renderField(w , field, res) ;        w.write("</td>") ;      }      w.write("\n</tr>\n") ;    }    w.  write("</table>") ;    w.write("</fieldset>") ;  }    private void renderField(ResponseWriter w , UIForm.Field field, ResourceBundle res) throws IOException {    if(field instanceof UIForm.TextAreaField) {      UIForm.StringField sfield = (UIForm.StringField) field ;      w.write("<textarea name='"); w.write(sfield.getName()) ; w.write("'>") ;      w.write(sfield.getValue()) ;      w.write("</textarea>");    } else if(field instanceof UIForm.SelectBoxField) {      UIForm.SelectBoxField sfield = (UIForm.SelectBoxField) field ;      w.write("<select "); w.write("name='"); w.write(sfield.getName()); w.write("'") ;      if (!sfield.isEditable()) {        w.write(" disabled='true'");      }      w.write(">\n") ;      List options = sfield.getOptions() ;      String selectValue = sfield.getValue() ;      for(int i=0; i < options.size(); i++) {        SelectItem si = (SelectItem) options.get(i) ;        if (si.value_.equals(selectValue)) {          w.write("<option selected='selected' value='"); w.write(si.value_); w.write("'>");           w.write(ExpressionUtil.getExpressionValue(res,si.display_)); w.write("</option>\n");        }  else {          w.write("<option value=\""); w.write(si.value_); w.write("\">");           w.write(ExpressionUtil.getExpressionValue(res,si.display_)); w.write("</option>\n");        }      }      w.write("</select>\n") ;    } else if(field instanceof UIForm.StringPasswordField) {      UIForm.StringField sfield = (UIForm.StringField) field ;      w.write("<input name='"); w.write(sfield.getName()) ; w.write("' value='") ;      w.write(sfield.getValue()) ; w.write("'") ;      w.write(" type='password'");      if(!sfield.isEditable())  w.write(" readonly='readonly'");      w.write("/>");      if(sfield.hasError())  w.write("<span style='color:red'>*</span>");    } else if(field instanceof UIForm.StringField) {      UIForm.StringField sfield = (UIForm.StringField) field ;      w.write("<input name='"); w.write(sfield.getName()) ; w.write("' value='") ;      w.write(sfield.getValue()) ; w.write("'") ;      if(!sfield.isEditable())  w.write(" readonly='readonly'");      w.write("/>");      if(sfield.hasError())  w.write("<span style='color:red'>*</span>");    }  }    public void renderFormButton(ResponseWriter w, UIForm uiForm,                                String label, String action)  throws IOException {    w.write("<a");    w.write(" href=\"javascript:submit_"); w.write(uiForm.getFormName()); w.write("('");    w.write(action) ; w.write("');\">");    w.write(label);    w.write("</a>");  }    private String getNormalScript(String formName) {    String script =    "<script type='text/javascript'>\n" +    "  //ie bug  you cannot have more than one button tag\n" +    "  function submit_" + formName + "(action) {\n" +    "    document." + formName + ".elements['" + FacesConstants.ACTION + "'].value = action ;\n" +    "    document." + formName + ".submit();\n" +    "  }\n" +    "</script>\n";    return script;  }}