/******************************************************************************* * Copyright 2001-2003 The eXo Platform SARL All rights reserved. * Please look * at license.txt in info directory for more license detail. * ******************************************************************************/package org.exoplatform.faces.core.component;import java.io.IOException;import java.util.List;import javax.faces.component.UIComponent;import javax.faces.context.FacesContext;import javax.faces.event.PhaseId;import org.exoplatform.faces.FacesConstants;import org.exoplatform.faces.core.Util;import org.exoplatform.faces.core.renderer.html.Decorator;import org.exoplatform.text.template.xhtml.XhtmlDataHandlerManager;import org.exoplatform.text.template.xhtml.Element;/** * Jul 30, 2004 *  * @author: Tuan Nguyen * @email: tuan08@users.sourceforge.net * @version: $Id: UIExoComponent.java,v 1.10 2004/10/27 02:52:15 tuan08 Exp $ */public interface UIExoComponent extends XhtmlDataHandlerManager {  final static public String ACTION           = FacesConstants.ACTION;  final static public String SAVE_ACTION      = FacesConstants.SAVE_ACTION;  final static public String CANCEL_ACTION    =     Util.encodeActionPhase(FacesConstants.CANCEL_ACTION, PhaseId.APPLY_REQUEST_VALUES);  final static public String EDIT_ACTION      = FacesConstants.EDIT_ACTION;  final static public String BACK_ACTION      = FacesConstants.BACK_ACTION;  final static public String DELETE_ACTION    = FacesConstants.DELETE_ACTION;  final static public String REMOVE_ACTION    = FacesConstants.DELETE_ACTION;  final static public String UPDATE_ACTION    = FacesConstants.UPDATE_ACTION;  final static public String VIEW_ACTION    = FacesConstants.VIEW_ACTION;  public static final String COMPONENT_FAMILY = "org.exoplatform.faces.core.component.UIExoComponent";  final static public String UICOMPONENT      = "uicomponent";  final static public String XHTMLMP_KIT      = "xhtmlmp";    final static public String OBJECTID = "objectId" ;  public String getId();  public void   setId(String id) ;    public boolean isRendered() ;  public void    setRendered(boolean b) ;    public boolean canDecodeInvalidState() ;    public UIExoComponent setDecorator(Decorator decorator) ;    public void decode(FacesContext context)  ;    public void processDecodes(FacesContext context)  ;    public String getClazz();  public UIExoComponent setClazz(String s);  public String getBaseURL();  public String getBaseURL(FacesContext context);  public List getChildren();  public UIExoComponent findComponentById(String id);    public UIExoComponent findRenderedComponentById(String id);  public UIComponent getAncestorOfType(Class classType);  public Object getChildComponentOfType(Class classType);  public void setRenderedComponent(String id);  public void setRenderedComponent(Class type);  public void setRenderedSibling(Class type);  public UIComponent getSibling(Class type);    public UIComponent getParent();    public void decorate(FacesContext context) throws IOException;    public void encodeBegin(FacesContext context) throws IOException;  public void encodeChildren(FacesContext context) throws IOException;  public void encodeEnd(FacesContext context) throws IOException;    public void registerActionListener(UIExoComponent parent) ;  public void registerComponentObserver(UIExoComponent parent) ;    public Element getTemplate() ;}