/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.faces.core.component;import java.util.Map ;import java.io.IOException  ;import javax.faces.context.FacesContext;import javax.faces.context.ResponseWriter;import javax.faces.validator.Validator;import javax.faces.validator.ValidatorException;/** * Wed, Dec 22, 2003 @ 23:14  * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $Id: UIIntegerInput.java,v 1.3 2004/08/16 14:20:41 tuan08 Exp $ */public class UIIntegerInput extends UIInput {  protected int value_ ;  public UIIntegerInput(String name, int value) {    name_ = name ;    value_ = value ;  }  final public int getValue() { return value_ ; }  final public UIIntegerInput setValue(int value) {     value_ = value ;     return this ;  }  public void decode(FacesContext context) {    Map paramMap = context.getExternalContext().getRequestParameterMap() ;    String value = (String) paramMap.get(name_) ;    if (value != null) {      try {        value_ = Integer.parseInt(value) ;         UISimpleForm form = (UISimpleForm) getParent() ;        form.setError(true) ;      } catch (NumberFormatException ex) {        error_ = true ;      }    }  }  public  void processValidators(javax.faces.context.FacesContext context) {    if(validators_ != null) {      try {        Integer value = new Integer(value_) ;        for(int i = 0; i < validators_.size(); i++) {          Validator validator = (Validator) validators_.get(i) ;          validator.validate(context, this, value) ;        }      } catch(ValidatorException ex) {        error_ = true ;        throw ex ;      }    }  }    public void encodeBegin(FacesContext context) throws IOException {    ResponseWriter w = context.getResponseWriter();    w.write("<input name='"); w.write(name_); w.write("'") ;    w.write(" value='"); w.write(Integer.toString(value_)); w.write("'") ;    if (getClazz() != null) {      w.write(" class='"); w.write(getClazz()); w.write("'") ;    }    w.write('>') ;  }}