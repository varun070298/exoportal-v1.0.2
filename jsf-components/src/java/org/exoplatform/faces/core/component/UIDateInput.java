/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.faces.core.component;import java.util.* ;import javax.faces.context.FacesContext;import javax.faces.validator.Validator ;/** * Wed, Dec 22, 2003 @ 23:14  * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $Id: UIDateInput.java,v 1.2 2004/10/16 21:13:50 tuan08 Exp $ */public class UIDateInput extends UIInput {  public static final String  COMPONENT_FAMILY = "org.exoplatform.faces.core.component.UIDateInput" ;  public static final int TEXT = 0;  public static final int PASSWORD = 1;    protected GregorianCalendar calendar_ ;  private int minYearRange_ = 2000 ;  private int maxYearRange_ = 2010 ;  public UIDateInput(String name, Date date) {  	setId(name) ;    name_ = name ;    calendar_ = new GregorianCalendar() ;    calendar_.set(Calendar.HOUR_OF_DAY, 23) ;    calendar_.set(Calendar.MINUTE, 59) ;    maxYearRange_ = calendar_.get(Calendar.YEAR) ;    setValue(date);    editable_ = true ;    setRendererType("DateInputRenderer") ;  }    public String getFamily() {  return COMPONENT_FAMILY ; }    final public Date getValue() { return calendar_.getTime() ; }  final public UIDateInput setValue(Date date) {    if(date != null)  calendar_.setTime(date) ;    return this ;      }    public Calendar getCalendar() { return calendar_ ; }    public int getMinYearRange() { return minYearRange_ ; }  public void setMinYearRange(int year) { minYearRange_ = year ; }    public int getMaxYearRange() { return maxYearRange_ ; }  public void setMaxYearRange(int year) { maxYearRange_ = year ; }    public UIDateInput addValidator(Validator validator) {    addComponentValidator(validator) ;    return this ;  }    public UIDateInput addValidator(Class clazz) {    addComponentValidator(clazz) ;    return this ;  }    final public  void processValidators(FacesContext context) {    processValidators(context, calendar_) ;  }}