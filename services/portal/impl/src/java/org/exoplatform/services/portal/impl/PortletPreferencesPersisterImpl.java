/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.services.portal.impl;import java.io.Serializable;import org.apache.commons.logging.Log;import org.exoplatform.container.PortalContainer;import org.exoplatform.services.log.LogService;import org.exoplatform.services.portal.model.Container;import org.exoplatform.services.portal.model.Page;import org.exoplatform.services.portal.model.PortalConfig;import org.exoplatform.services.portal.model.Portlet;import org.exoplatform.services.portletcontainer.pci.ExoWindowID;import org.exoplatform.services.portletcontainer.pci.WindowID;import org.exoplatform.services.portletcontainer.pci.model.ExoPortletPreferences;import org.exoplatform.services.portletcontainer.persistence.PortletPreferencesPersister;/** * Jul 16, 2004  * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $Id: PortletPreferencesPersisterImpl.java,v 1.4 2004/08/11 02:22:16 tuan08 Exp $ */public class PortletPreferencesPersisterImpl implements  PortletPreferencesPersister, Serializable{  private transient PortalConfigServiceImpl service_ ;  private transient Log log_;	public PortletPreferencesPersisterImpl(PortalConfigServiceImpl impl,                                         LogService lservice) {		service_ = impl ;    log_ = lservice.getLog(getClass());   }	public ExoPortletPreferences getPortletPreferences(WindowID windowID) throws Exception {    if(service_ == null){      service_ = (PortalConfigServiceImpl) PortalContainer.getInstance().getComponentInstanceOfType(          PortalConfigServiceImpl.class);      LogService lservice = (LogService) PortalContainer.getInstance().getComponentInstanceOfType(          LogService.class);      log_ = lservice.getLog(getClass());    }    		ExoWindowID exoWindowID = (ExoWindowID) windowID ;		String configurationSource = exoWindowID.getConfigurationSource() ;		Container layout = null ;		if(ExoWindowID.DEFAULT_PORTAL_CONFIG.equals(configurationSource)) {      PortalConfig config = service_.getPortalConfig(windowID.getOwner()) ;		  layout = config.getLayout() ;		} else if(ExoWindowID.MOBILE_PORTAL_CONFIG.equals(configurationSource)) {      PortalConfig config = service_.getPortalConfig(windowID.getOwner()) ;		  layout = config.getMobilePortalLayout() ;		} else {      layout = service_.getPage(configurationSource) ;    }		Portlet portlet = layout.findPortletByWindowId(exoWindowID.getPersistenceId()) ;		if(portlet != null) {			return portlet.getPortletPreferences() ;		}		return null  ;	}	public void savePortletPreferences(WindowID windowID, 																		 ExoPortletPreferences exoPref) throws Exception {    if(service_ == null){      service_ = (PortalConfigServiceImpl) PortalContainer.getInstance().getComponentInstanceOfType(          PortalConfigServiceImpl.class);      LogService lservice = (LogService) PortalContainer.getInstance().getComponentInstanceOfType(          LogService.class);      log_ = lservice.getLog(getClass());    }    		ExoWindowID exoWindowID = (ExoWindowID) windowID ;		String configurationSource = exoWindowID.getConfigurationSource() ;    Container layout = null ;    PortalConfig config = null ;    if(ExoWindowID.DEFAULT_PORTAL_CONFIG.equals(configurationSource)) {      config = service_.getPortalConfig(windowID.getOwner()) ;      layout = config.getLayout() ;    } else if(ExoWindowID.MOBILE_PORTAL_CONFIG.equals(configurationSource)) {      config = service_.getPortalConfig(windowID.getOwner()) ;      layout = config.getMobilePortalLayout() ;    } else {      layout = service_.getPage(configurationSource) ;    }    Portlet portlet = layout.findPortletByWindowId(exoWindowID.getPersistenceId()) ;    if(portlet == null) {      log_.error("cannot find the portlet, portlet persitence id: " + exoWindowID.getPersistenceId()) ;      throw new Exception("Cannot find the portlet in  " + configurationSource) ;    }    portlet.setPortletPreferences(exoPref) ;    if(config != null)  service_.savePortalConfig(config) ;    else service_.savePage((Page)layout) ;	}}